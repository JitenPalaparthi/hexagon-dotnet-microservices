
user  nginx;
worker_processes  auto;

events { worker_connections 1024; }

http {
  # Basic tuning
  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;
  keepalive_timeout 65;
  types_hash_max_size 4096;
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  # Upstreams
  upstream service_a_upstream { server service_a:8080; }
  upstream service_b_upstream { server service_b:8080; }
  upstream grpc_upstream      { server grpc_service:8090; } # h2c backend

  server {
    listen 80;
    server_name localhost;
    return 301 https://$host$request_uri;
  }

  server {
    listen 443 ssl http2;
    server_name localhost;

    ssl_certificate     /etc/nginx/certs/server.crt;
    ssl_certificate_key /etc/nginx/certs/server.key;
    ssl_protocols       TLSv1.2 TLSv1.3;
    ssl_ciphers         HIGH:!aNULL:!MD5;

    # REST services (HTTP/1.1 proxy)
    location /svc1/ {
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-For $remote_addr;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Forwarded-Prefix /svc1;
      rewrite ^/svc1/?(.*)$ /$1 break;
      proxy_pass http://service_a_upstream;
    }

    location /svc2/ {
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-For $remote_addr;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Forwarded-Prefix /svc2;
      rewrite ^/svc2/?(.*)$ /$1 break;
      proxy_pass http://service_b_upstream;
    }

    # gRPC route (full-duplex over HTTP/2)
    # Example: grpcurl -insecure -proto GrpcService/Protos/greeter.proto https://localhost:443 demo.Greeter/SayHello
    location /grpc {
      # Strip the /grpc prefix to send the same path to backend
      grpc_set_header Host $host;
      grpc_set_header X-Forwarded-Proto $scheme;
      grpc_set_header X-Forwarded-For $remote_addr;
      grpc_pass grpc://grpc_upstream;
    }

    # Health
    location = /healthz { return 200 "ok"; add_header Content-Type text/plain; }
  }
}
